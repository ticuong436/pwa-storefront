# Override: node_modules/@magento/venia-ui/upward.yml
# This is a top-level object used to set values for the root `status`,
# `headers`, and `body` properties.
# It is the first branch in an abstract decision tree, which ultimately
# resolves to an object that contains values for its own 'status', 'headers',
# and 'body' properties.
# This object uses a ConditionalResolver to determine the object value based
# on the URL pattern in the request object.
veniaResponse:
  resolver: conditional
  when:
    # Requests to graphql/rest endpoints, the media library, and cache are
    # handled by the top-level 'veniaProxy' object, which is a ProxyResolver
    # that passes the request through to the backing Magento server.
    - matches: request.url.pathname
      pattern: '^/(graphql|rest|media)(/|$)'
      use: veniaProxy
    - matches: request.url.pathname
      pattern: '^/(robots\.txt|favicon\.ico|manifest\.json)'
      use: staticFromRoot
    - matches: fileExtension
      # Override here: add jpg image
      pattern: '(js|json|png|svg|ico|css|txt|jpg|otf|ttf)'
      use: veniaStatic
  default: veniaAppShell

# These are no-ops at runtime; nothing refers to these context values in the
# rest of this file. They exist to declare that the files in the `./templates`
# and `./static` directories are required and should be copied into the build
# assets by the UpwardIncludePlugin. Since they are not directly mentioned
# elsewhere in this file or any other upward.yml file in the build, the
# UpwardIncludePlugin would fail to copy them if they were not mentioned here.

# The static directory includes files which don't need to be compiled.
# They are served by the `veniaStatic` DirectoryResolver, along with the
# bundles and other assets, but since that resolver serves the `.` dist
# directory, the UpwardIncludePlugin will not copy it to avoid circular
# dependency. TODO: This is kind of confusing.
veniaStaticIncludes:
  resolver: directory
  directory:
    resolver: inline
    inline: './static'

# This is the UPWARD specification file for the Venia storefront.
# It is used by an UPWARD server implementation, such as upward-js and
# upward-php, to describe how the server responds to requests.
# See: https://pwastudio.io/technologies/upward/

# The root properties of an UPWARD spec file are part of a global context
# that includes request and environment data.
# These properties are available to other properties and are ultimately
# populated with Resolvers.

# The root 'status', 'headers', and 'body' properties are required properties
# in an UPWARD spec file.
# An UPWARD server uses the resolved values of these properties to create an
# HTTP response to the client.
# In this file, these properties get their values from a top-level
# 'response' object, which is a recommended and best practice approach.
status: veniaResponse.status
headers: veniaResponse.headers
body: veniaResponse.body
